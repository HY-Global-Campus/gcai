/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-10-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AzurePeriodCorePeriodFoundationsPeriodError : The error object.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AzurePeriodCorePeriodFoundationsPeriodError {
    /// One of a server-defined set of error codes.
    #[serde(rename = "code")]
    pub code: String,
    /// A human-readable representation of the error.
    #[serde(rename = "message")]
    pub message: String,
    /// The target of the error.
    #[serde(rename = "target", skip_serializing_if = "Option::is_none")]
    pub target: Option<String>,
    /// An array of details about specific errors that led to this reported error.
    #[serde(rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<Vec<models::AzurePeriodCorePeriodFoundationsPeriodError>>,
    #[serde(rename = "innererror", skip_serializing_if = "Option::is_none")]
    pub innererror: Option<Box<models::AzurePeriodCorePeriodFoundationsPeriodInnerError>>,
}

impl AzurePeriodCorePeriodFoundationsPeriodError {
    /// The error object.
    pub fn new(code: String, message: String) -> AzurePeriodCorePeriodFoundationsPeriodError {
        AzurePeriodCorePeriodFoundationsPeriodError {
            code,
            message,
            target: None,
            details: None,
            innererror: None,
        }
    }
}


/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-10-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ListBatches200Response : The response data for a requested list of items.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ListBatches200Response {
    /// The object type, which is always list.
    #[serde(rename = "object")]
    pub object: Object,
    /// The requested list of items.
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Vec<models::Batch>>,
    /// The first ID represented in this list.
    #[serde(rename = "first_id", skip_serializing_if = "Option::is_none")]
    pub first_id: Option<String>,
    /// The last ID represented in this list.
    #[serde(rename = "last_id", skip_serializing_if = "Option::is_none")]
    pub last_id: Option<String>,
    /// A value indicating whether there are additional values available not captured in this list.
    #[serde(rename = "has_more", skip_serializing_if = "Option::is_none")]
    pub has_more: Option<bool>,
}

impl ListBatches200Response {
    /// The response data for a requested list of items.
    pub fn new(object: Object) -> ListBatches200Response {
        ListBatches200Response {
            object,
            data: None,
            first_id: None,
            last_id: None,
            has_more: None,
        }
    }
}
/// The object type, which is always list.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "list")]
    List,
}

impl Default for Object {
    fn default() -> Object {
        Self::List
    }
}


/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-10-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MongoDbChatExtensionParametersFieldsMapping : Field mappings to apply to data used by the MongoDB data source. Note that content and vector field mappings are required for MongoDB.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MongoDbChatExtensionParametersFieldsMapping {
    #[serde(rename = "content_fields")]
    pub content_fields: Vec<String>,
    #[serde(rename = "vector_fields")]
    pub vector_fields: Vec<String>,
    #[serde(rename = "title_field", skip_serializing_if = "Option::is_none")]
    pub title_field: Option<String>,
    #[serde(rename = "url_field", skip_serializing_if = "Option::is_none")]
    pub url_field: Option<String>,
    #[serde(rename = "filepath_field", skip_serializing_if = "Option::is_none")]
    pub filepath_field: Option<String>,
    #[serde(rename = "content_fields_separator", skip_serializing_if = "Option::is_none")]
    pub content_fields_separator: Option<String>,
}

impl MongoDbChatExtensionParametersFieldsMapping {
    /// Field mappings to apply to data used by the MongoDB data source. Note that content and vector field mappings are required for MongoDB.
    pub fn new(content_fields: Vec<String>, vector_fields: Vec<String>) -> MongoDbChatExtensionParametersFieldsMapping {
        MongoDbChatExtensionParametersFieldsMapping {
            content_fields,
            vector_fields,
            title_field: None,
            url_field: None,
            filepath_field: None,
            content_fields_separator: None,
        }
    }
}


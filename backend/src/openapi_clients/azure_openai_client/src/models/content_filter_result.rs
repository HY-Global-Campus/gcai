/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-05-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ContentFilterResult : Information about filtered content severity level and if it has been filtered or not.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContentFilterResult {
    /// A value indicating whether or not the content has been filtered.
    #[serde(rename = "filtered")]
    pub filtered: bool,
    #[serde(rename = "severity")]
    pub severity: models::ContentFilterSeverity,
}

impl ContentFilterResult {
    /// Information about filtered content severity level and if it has been filtered or not.
    pub fn new(filtered: bool, severity: models::ContentFilterSeverity) -> ContentFilterResult {
        ContentFilterResult {
            filtered,
            severity,
        }
    }
}


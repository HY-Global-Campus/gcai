/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-10-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BatchErrorList : A list of Batch errors.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BatchErrorList {
    /// The object type, which is always `list`.
    #[serde(rename = "object")]
    pub object: Object,
    /// The list of Batch error data.
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Vec<models::BatchErrorDatum>>,
}

impl BatchErrorList {
    /// A list of Batch errors.
    pub fn new(object: Object) -> BatchErrorList {
        BatchErrorList {
            object,
            data: None,
        }
    }
}
/// The object type, which is always `list`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "list")]
    List,
}

impl Default for Object {
    fn default() -> Object {
        Self::List
    }
}


/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-05-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ChatRequestUserMessage : A request chat message representing user input to the assistant.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChatRequestUserMessage {
    #[serde(rename = "content")]
    pub content: serde_json::Value,
    /// An optional name for the participant.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "role")]
    pub role: models::ChatRole,
}

impl ChatRequestUserMessage {
    /// A request chat message representing user input to the assistant.
    pub fn new(content: serde_json::Value, role: models::ChatRole) -> ChatRequestUserMessage {
        ChatRequestUserMessage {
            content,
            name: None,
            role,
        }
    }
}


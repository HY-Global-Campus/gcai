/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-10-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ChatTokenLogProbabilityInfo : A representation of the log probability information for a single message content token.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChatTokenLogProbabilityInfo {
    /// The message content token.
    #[serde(rename = "token")]
    pub token: String,
    /// The log probability of the message content token.
    #[serde(rename = "logprob")]
    pub logprob: f32,
    /// A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be null if there is no bytes representation for the token.
    #[serde(rename = "bytes", deserialize_with = "Option::deserialize")]
    pub bytes: Option<Vec<i32>>,
}

impl ChatTokenLogProbabilityInfo {
    /// A representation of the log probability information for a single message content token.
    pub fn new(token: String, logprob: f32, bytes: Option<Vec<i32>>) -> ChatTokenLogProbabilityInfo {
        ChatTokenLogProbabilityInfo {
            token,
            logprob,
            bytes,
        }
    }
}


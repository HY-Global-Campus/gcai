/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-10-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ContentFilterResultsForChoice : Information about content filtering evaluated against generated model output.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContentFilterResultsForChoice {
    #[serde(rename = "sexual", skip_serializing_if = "Option::is_none")]
    pub sexual: Option<Box<models::ContentFilterResult>>,
    #[serde(rename = "violence", skip_serializing_if = "Option::is_none")]
    pub violence: Option<Box<models::ContentFilterResult>>,
    #[serde(rename = "hate", skip_serializing_if = "Option::is_none")]
    pub hate: Option<Box<models::ContentFilterResult>>,
    #[serde(rename = "self_harm", skip_serializing_if = "Option::is_none")]
    pub self_harm: Option<Box<models::ContentFilterResult>>,
    #[serde(rename = "profanity", skip_serializing_if = "Option::is_none")]
    pub profanity: Option<Box<models::ContentFilterDetectionResult>>,
    #[serde(rename = "custom_blocklists", skip_serializing_if = "Option::is_none")]
    pub custom_blocklists: Option<Box<models::ContentFilterDetailedResults>>,
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<Box<models::AzurePeriodCorePeriodFoundationsPeriodError>>,
    #[serde(rename = "protected_material_text", skip_serializing_if = "Option::is_none")]
    pub protected_material_text: Option<Box<models::ContentFilterDetectionResult>>,
    #[serde(rename = "protected_material_code", skip_serializing_if = "Option::is_none")]
    pub protected_material_code: Option<Box<models::ContentFilterCitedDetectionResult>>,
    #[serde(rename = "ungrounded_material", skip_serializing_if = "Option::is_none")]
    pub ungrounded_material: Option<Box<models::ContentFilterCompletionTextSpanResult>>,
}

impl ContentFilterResultsForChoice {
    /// Information about content filtering evaluated against generated model output.
    pub fn new() -> ContentFilterResultsForChoice {
        ContentFilterResultsForChoice {
            sexual: None,
            violence: None,
            hate: None,
            self_harm: None,
            profanity: None,
            custom_blocklists: None,
            error: None,
            protected_material_text: None,
            protected_material_code: None,
            ungrounded_material: None,
        }
    }
}


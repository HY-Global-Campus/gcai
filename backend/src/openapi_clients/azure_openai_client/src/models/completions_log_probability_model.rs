/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-05-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CompletionsLogProbabilityModel : Representation of a log probabilities model for a completions generation.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CompletionsLogProbabilityModel {
    /// The textual forms of tokens evaluated in this probability model.
    #[serde(rename = "tokens")]
    pub tokens: Vec<String>,
    /// A collection of log probability values for the tokens in this completions data.
    #[serde(rename = "token_logprobs")]
    pub token_logprobs: Vec<f32>,
    /// A mapping of tokens to maximum log probability values in this completions data.
    #[serde(rename = "top_logprobs")]
    pub top_logprobs: Vec<std::collections::HashMap<String, f32>>,
    /// The text offsets associated with tokens in this completions data.
    #[serde(rename = "text_offset")]
    pub text_offset: Vec<i32>,
}

impl CompletionsLogProbabilityModel {
    /// Representation of a log probabilities model for a completions generation.
    pub fn new(tokens: Vec<String>, token_logprobs: Vec<f32>, top_logprobs: Vec<std::collections::HashMap<String, f32>>, text_offset: Vec<i32>) -> CompletionsLogProbabilityModel {
        CompletionsLogProbabilityModel {
            tokens,
            token_logprobs,
            top_logprobs,
            text_offset,
        }
    }
}


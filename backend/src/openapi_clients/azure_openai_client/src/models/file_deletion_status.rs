/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-10-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FileDeletionStatus : A status response from a file deletion operation.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FileDeletionStatus {
    /// The ID of the resource specified for deletion.
    #[serde(rename = "id")]
    pub id: String,
    /// A value indicating whether deletion was successful.
    #[serde(rename = "deleted")]
    pub deleted: bool,
    /// The object type, which is always 'file'.
    #[serde(rename = "object")]
    pub object: Object,
}

impl FileDeletionStatus {
    /// A status response from a file deletion operation.
    pub fn new(id: String, deleted: bool, object: Object) -> FileDeletionStatus {
        FileDeletionStatus {
            id,
            deleted,
            object,
        }
    }
}
/// The object type, which is always 'file'.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "file")]
    File,
}

impl Default for Object {
    fn default() -> Object {
        Self::File
    }
}


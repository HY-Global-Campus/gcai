/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-10-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// EmbeddingItem : Representation of a single embeddings relatedness comparison.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EmbeddingItem {
    /// List of embeddings value for the input prompt. These represent a measurement of the vector-based relatedness of the provided input.
    #[serde(rename = "embedding")]
    pub embedding: Vec<f32>,
    /// Index of the prompt to which the EmbeddingItem corresponds.
    #[serde(rename = "index")]
    pub index: i32,
    /// The object type which is always 'embedding'.
    #[serde(rename = "object")]
    pub object: Object,
}

impl EmbeddingItem {
    /// Representation of a single embeddings relatedness comparison.
    pub fn new(embedding: Vec<f32>, index: i32, object: Object) -> EmbeddingItem {
        EmbeddingItem {
            embedding,
            index,
            object,
        }
    }
}
/// The object type which is always 'embedding'.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "embedding")]
    Embedding,
}

impl Default for Object {
    fn default() -> Object {
        Self::Embedding
    }
}


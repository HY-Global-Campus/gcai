/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-10-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FilePurpose : The possible values denoting the intended usage of a file.
/// The possible values denoting the intended usage of a file.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FilePurpose {
    #[serde(rename = "fine-tune")]
    FineTune,
    #[serde(rename = "fine-tune-results")]
    FineTuneResults,
    #[serde(rename = "assistants")]
    Assistants,
    #[serde(rename = "assistants_output")]
    AssistantsOutput,
    #[serde(rename = "batch")]
    Batch,
    #[serde(rename = "batch_output")]
    BatchOutput,
    #[serde(rename = "vision")]
    Vision,

}

impl std::fmt::Display for FilePurpose {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::FineTune => write!(f, "fine-tune"),
            Self::FineTuneResults => write!(f, "fine-tune-results"),
            Self::Assistants => write!(f, "assistants"),
            Self::AssistantsOutput => write!(f, "assistants_output"),
            Self::Batch => write!(f, "batch"),
            Self::BatchOutput => write!(f, "batch_output"),
            Self::Vision => write!(f, "vision"),
        }
    }
}

impl Default for FilePurpose {
    fn default() -> FilePurpose {
        Self::FineTune
    }
}


/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-10-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OnYourDataAuthenticationType : The authentication types supported with Azure OpenAI On Your Data.
/// The authentication types supported with Azure OpenAI On Your Data.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OnYourDataAuthenticationType {
    #[serde(rename = "api_key")]
    ApiKey,
    #[serde(rename = "connection_string")]
    ConnectionString,
    #[serde(rename = "key_and_key_id")]
    KeyAndKeyId,
    #[serde(rename = "encoded_api_key")]
    EncodedApiKey,
    #[serde(rename = "access_token")]
    AccessToken,
    #[serde(rename = "system_assigned_managed_identity")]
    SystemAssignedManagedIdentity,
    #[serde(rename = "user_assigned_managed_identity")]
    UserAssignedManagedIdentity,
    #[serde(rename = "username_and_password")]
    UsernameAndPassword,

}

impl std::fmt::Display for OnYourDataAuthenticationType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ApiKey => write!(f, "api_key"),
            Self::ConnectionString => write!(f, "connection_string"),
            Self::KeyAndKeyId => write!(f, "key_and_key_id"),
            Self::EncodedApiKey => write!(f, "encoded_api_key"),
            Self::AccessToken => write!(f, "access_token"),
            Self::SystemAssignedManagedIdentity => write!(f, "system_assigned_managed_identity"),
            Self::UserAssignedManagedIdentity => write!(f, "user_assigned_managed_identity"),
            Self::UsernameAndPassword => write!(f, "username_and_password"),
        }
    }
}

impl Default for OnYourDataAuthenticationType {
    fn default() -> OnYourDataAuthenticationType {
        Self::ApiKey
    }
}


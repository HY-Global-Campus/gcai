/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-10-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ImageGenerationContentFilterResults : Describes the content filtering result for the image generation request.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ImageGenerationContentFilterResults {
    #[serde(rename = "sexual", skip_serializing_if = "Option::is_none")]
    pub sexual: Option<Box<models::ContentFilterResult>>,
    #[serde(rename = "violence", skip_serializing_if = "Option::is_none")]
    pub violence: Option<Box<models::ContentFilterResult>>,
    #[serde(rename = "hate", skip_serializing_if = "Option::is_none")]
    pub hate: Option<Box<models::ContentFilterResult>>,
    #[serde(rename = "self_harm", skip_serializing_if = "Option::is_none")]
    pub self_harm: Option<Box<models::ContentFilterResult>>,
}

impl ImageGenerationContentFilterResults {
    /// Describes the content filtering result for the image generation request.
    pub fn new() -> ImageGenerationContentFilterResults {
        ImageGenerationContentFilterResults {
            sexual: None,
            violence: None,
            hate: None,
            self_harm: None,
        }
    }
}


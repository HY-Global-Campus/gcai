/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-05-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ContentFilterDetailedResults : Represents a structured collection of result details for content filtering.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContentFilterDetailedResults {
    /// A value indicating whether or not the content has been filtered.
    #[serde(rename = "filtered")]
    pub filtered: bool,
    /// The collection of detailed blocklist result information.
    #[serde(rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<Vec<models::ContentFilterBlocklistIdResult>>,
}

impl ContentFilterDetailedResults {
    /// Represents a structured collection of result details for content filtering.
    pub fn new(filtered: bool) -> ContentFilterDetailedResults {
        ContentFilterDetailedResults {
            filtered,
            details: None,
        }
    }
}


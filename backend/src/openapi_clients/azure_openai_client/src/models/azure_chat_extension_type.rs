/*
 * Azure OpenAI API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2024-10-01-preview
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AzureChatExtensionType :   A representation of configuration data for a single Azure OpenAI chat extension. This will be used by a chat   completions request that should use Azure OpenAI chat extensions to augment the response behavior.   The use of this configuration is compatible only with Azure OpenAI.
///   A representation of configuration data for a single Azure OpenAI chat extension. This will be used by a chat   completions request that should use Azure OpenAI chat extensions to augment the response behavior.   The use of this configuration is compatible only with Azure OpenAI.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AzureChatExtensionType {
    #[serde(rename = "azure_search")]
    AzureSearch,
    #[serde(rename = "azure_cosmos_db")]
    AzureCosmosDb,
    #[serde(rename = "elasticsearch")]
    Elasticsearch,
    #[serde(rename = "pinecone")]
    Pinecone,
    #[serde(rename = "mongo_db")]
    MongoDb,

}

impl std::fmt::Display for AzureChatExtensionType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::AzureSearch => write!(f, "azure_search"),
            Self::AzureCosmosDb => write!(f, "azure_cosmos_db"),
            Self::Elasticsearch => write!(f, "elasticsearch"),
            Self::Pinecone => write!(f, "pinecone"),
            Self::MongoDb => write!(f, "mongo_db"),
        }
    }
}

impl Default for AzureChatExtensionType {
    fn default() -> AzureChatExtensionType {
        Self::AzureSearch
    }
}


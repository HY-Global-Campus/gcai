/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreateModerationRequestInputOneOfInnerOneOf : An object describing an image to classify.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateModerationRequestInputOneOfInnerOneOf {
    /// Always `image_url`.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "image_url")]
    pub image_url: Box<models::CreateModerationRequestInputOneOfInnerOneOfImageUrl>,
}

impl CreateModerationRequestInputOneOfInnerOneOf {
    /// An object describing an image to classify.
    pub fn new(r#type: Type, image_url: models::CreateModerationRequestInputOneOfInnerOneOfImageUrl) -> CreateModerationRequestInputOneOfInnerOneOf {
        CreateModerationRequestInputOneOfInnerOneOf {
            r#type,
            image_url: Box::new(image_url),
        }
    }
}
/// Always `image_url`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "image_url")]
    ImageUrl,
}

impl Default for Type {
    fn default() -> Type {
        Self::ImageUrl
    }
}


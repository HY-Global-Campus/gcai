/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// UsageCodeInterpreterSessionsResult : The aggregated code interpreter sessions usage details of the specific time bucket.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsageCodeInterpreterSessionsResult {
    #[serde(rename = "object")]
    pub object: Object,
    /// The number of code interpreter sessions.
    #[serde(rename = "sessions")]
    pub sessions: i32,
    /// When `group_by=project_id`, this field provides the project ID of the grouped usage result.
    #[serde(rename = "project_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub project_id: Option<Option<String>>,
}

impl UsageCodeInterpreterSessionsResult {
    /// The aggregated code interpreter sessions usage details of the specific time bucket.
    pub fn new(object: Object, sessions: i32) -> UsageCodeInterpreterSessionsResult {
        UsageCodeInterpreterSessionsResult {
            object,
            sessions,
            project_id: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "organization.usage.code_interpreter_sessions.result")]
    OrganizationPeriodUsagePeriodCodeInterpreterSessionsPeriodResult,
}

impl Default for Object {
    fn default() -> Object {
        Self::OrganizationPeriodUsagePeriodCodeInterpreterSessionsPeriodResult
    }
}


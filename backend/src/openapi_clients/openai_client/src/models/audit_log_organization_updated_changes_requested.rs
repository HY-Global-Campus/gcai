/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AuditLogOrganizationUpdatedChangesRequested : The payload used to update the organization settings.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuditLogOrganizationUpdatedChangesRequested {
    /// The organization title.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// The organization description.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The organization name.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "settings", skip_serializing_if = "Option::is_none")]
    pub settings: Option<Box<models::AuditLogOrganizationUpdatedChangesRequestedSettings>>,
}

impl AuditLogOrganizationUpdatedChangesRequested {
    /// The payload used to update the organization settings.
    pub fn new() -> AuditLogOrganizationUpdatedChangesRequested {
        AuditLogOrganizationUpdatedChangesRequested {
            title: None,
            description: None,
            name: None,
            settings: None,
        }
    }
}

